{"version":3,"sources":["main/ui/common/SuperInputText/SuperInputText.module.css","main/ui/common/SuperButton/SuperButton.module.css","main/ui/common/SuperCheckbox/SuperCheckbox.module.css","main/ui/common/SuperEditableSpan/SuperEditableSpan.module.css","main/ui/common/SuperRadio/SuperRadio.module.css","main/ui/common/SuperRange/SuperRange.module.css","main/ui/common/SuperSelect/SuperSelect.module.css","main/ui/Routes/Routes.tsx","reportWebVitals.ts","main/ui/Error404/Error404.tsx","main/ui/Registration/Registration.tsx","main/ui/Profile/Profile.tsx","main/ui/ResetPassword/ResetPassword.tsx","main/ui/CreateNewPassword/CreateNewPassword.tsx","main/ui/common/SuperButton/SuperButton.tsx","main/ui/common/SuperCheckbox/SuperCheckbox.tsx","main/ui/common/SuperInputText/SuperInputText.tsx","main/ui/common/SuperEditableSpan/SuperEditableSpan.tsx","main/ui/common/SuperRadio/SuperRadio.tsx","main/ui/common/SuperRange/SuperRange.tsx","main/ui/common/SuperSelect/SuperSelect.tsx","main/ui/SuperComponents/SuperComponents.tsx","main/ui/LogIn/LogIn.tsx","main/ui/Header/Header.tsx","main/bll/logInReducer.ts","main/bll/registrationReducer.ts","main/bll/profileReducer.ts","main/bll/resetPasswordReducer.ts","main/bll/createNewPasswordReducer.ts","main/bll/error404Reducer.ts","main/bll/store.ts","main/ui/App.tsx","index.tsx","main/ui/Header/Header.module.css"],"names":["module","exports","Path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","Registration","Profile","ResetPassword","CreateNewPassword","SuperButton","red","className","restProps","finalClassName","classes","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","select","SuperComponents","style","fontWeight","marginLeft","LogIn","Routes","exact","path","render","to","from","Header","nav","item","activeClassName","active","initState","rootReducer","combineReducers","logIn","state","action","registration","profile","resetPassword","createNewPassword","error404","store","createStore","applyMiddleware","thunk","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e749cbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2uOPe\",\"errorInput\":\"SuperInputText_errorInput__12k4i\",\"error\":\"SuperInputText_error__1caa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2Ym_b\",\"red\":\"SuperButton_red__2DW1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1F-gW\",\"spanClassName\":\"SuperCheckbox_spanClassName__2th1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__bTJ21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__1578U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3SpH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__W90yv\"};","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Error404 } from \"../Error404/Error404\";\nimport { Registration } from \"../Registration/Registration\";\nimport { Profile } from \"../Profile/Profile\";\nimport { ResetPassword } from \"../ResetPassword/ResetPassword\";\nimport { CreateNewPassword } from \"../CreateNewPassword/CreateNewPassword\";\nimport { SuperComponents } from \"../SuperComponents/SuperComponents\";\nimport { LogIn } from \"../LogIn/LogIn\";\n\nexport enum Path {\n  LogIn = \"/login\",\n  Registration = \"/registration\",\n  Profile = \"/profile\",\n  ResetPassword = \"/resetPassword\",\n  CreateNewPassword = \"/createNewPassword\",\n  SuperComponents = \"/superComponents\",\n  Error404 = \"/404\",\n}\n\nexport const Routes = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path={\"/\"} render={() => <Redirect to={Path.LogIn} />} />\n        <Route path={Path.LogIn} render={() => <LogIn />} />\n        <Route path={Path.Registration} render={() => <Registration />} />\n        <Route path={Path.Profile} render={() => <Profile />} />\n        <Route path={Path.ResetPassword} render={() => <ResetPassword />} />\n        <Route\n          path={Path.CreateNewPassword}\n          render={() => <CreateNewPassword />}\n        />\n        <Route path={Path.SuperComponents} render={() => <SuperComponents />} />\n        <Route path={Path.Error404} render={() => <Error404 />} />\n        <Redirect from={\"*\"} to={Path.Error404} />\n      </Switch>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport const Error404 = () => {\n  return <div>Error 404</div>;\n};\n","import React from \"react\";\n\nexport const Registration = () => {\n  return <div>Registration</div>;\n};\n","import React from \"react\";\n\nexport const Profile = () => {\n  return <div>Profile</div>;\n};\n","import React from \"react\";\n\nexport const ResetPassword = () => {\n  return <div>Reset password</div>;\n};\n","import React from \"react\";\n\nexport const CreateNewPassword = () => {\n  return <div>Create new password</div>;\n};\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport classes from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n  red?: boolean;\n};\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({\n  red,\n  className,\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n}) => {\n  const finalClassName = `${red ? classes.red : classes.default} ${className}`;\n\n  return (\n    <button\n      className={finalClassName}\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n    />\n  );\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport classes from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n\n    onChangeChecked && onChangeChecked(e.currentTarget.checked); // works with both onChange and onChangeChecked !\n  };\n\n  const finalInputClassName = `${classes.checkbox} ${\n    className ? className : \"\"\n  }`;\n\n  return (\n    <label>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={classes.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport classes from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter && // если есть пропс onEnter\n      e.key === \"Enter\" && // и если нажата кнопка Enter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${classes.error} ${\n    spanClassName ? spanClassName : \"\"\n  }`;\n  const finalInputClassName = `${\n    error ? classes.errorInput : classes.superInput\n  } ${className}`;\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n","import React, {\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  HTMLAttributes,\n  useState,\n} from \"react\";\nimport classes from \"./SuperEditableSpan.module.css\";\nimport { SuperInputText } from \"../SuperInputText/SuperInputText\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\ntype DefaultSpanPropsType = DetailedHTMLProps<\n  HTMLAttributes<HTMLSpanElement>,\n  HTMLSpanElement\n>;\n\ntype SuperEditableSpanType = DefaultInputPropsType & {\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string; // input props\n\n  spanProps?: DefaultSpanPropsType; // span props\n};\n\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n  autoFocus, // игнорировать изменение этого пропса\n  onBlur,\n  onEnter,\n  spanProps,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const { children, onDoubleClick, className, ...restSpanProps } =\n    spanProps || {};\n\n  const onEnterCallback = () => {\n    setEditMode(false);\n\n    onEnter && onEnter();\n  };\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    setEditMode(false);\n\n    onBlur && onBlur(e);\n  };\n  const onDoubleClickCallBack = (\n    e: React.MouseEvent<HTMLSpanElement, MouseEvent>\n  ) => {\n    setEditMode(true);\n\n    onDoubleClick && onDoubleClick(e);\n  };\n\n  const spanClassName = `${classes.editableSpan} ${className}`;\n\n  return (\n    <>\n      {editMode ? (\n        <SuperInputText\n          autoFocus\n          onBlur={onBlurCallback}\n          onEnter={onEnterCallback}\n          {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n        />\n      ) : (\n        <span\n          onDoubleClick={onDoubleClickCallBack}\n          className={spanClassName}\n          {...restSpanProps}\n        >\n          {/*если нет захардкодженного текста для спана, то значение инпута*/}\n          {children || restProps.value}\n        </span>\n      )}\n    </>\n  );\n};\n","import React, {\n  ChangeEvent,\n  InputHTMLAttributes,\n  DetailedHTMLProps,\n} from \"react\";\nimport classes from \"./SuperRadio.module.css\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n  options?: any[];\n  onChangeOption?: (option: any) => void;\n};\n\nexport const SuperRadio: React.FC<SuperRadioPropsType> = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n          <input\n            type={\"radio\"}\n            name={name}\n            checked={o === value}\n            value={o}\n            onChange={onChangeCallback}\n            className={classes.radio}\n            {...restProps}\n          />\n          {o}\n        </label>\n      ))\n    : [];\n\n  return <>{mappedOptions}</>;\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport classes from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeRange?: (value: number) => void;\n  value: number;\n};\n\nexport const SuperRange: React.FC<SuperRangePropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeRange,\n  className,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e); // сохраняем старую функциональность\n\n    onChangeRange && onChangeRange(+e.currentTarget.value);\n  };\n\n  const finalRangeClassName = `${classes.range} ${className ? className : \"\"}`;\n\n  return (\n    <>\n      <input\n        type={\"range\"}\n        onChange={onChangeCallback}\n        className={finalRangeClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n    </>\n  );\n};\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from \"react\";\nimport classes from \"./SuperSelect.module.css\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>;\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n  options?: any[];\n  onChangeOption?: (option: any) => void;\n};\n\nexport const SuperSelect: React.FC<SuperSelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <option key={o + \"-\" + i} value={o}>\n          {o}\n        </option>\n      ))\n    : [];\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  return (\n    <select\n      onChange={onChangeCallback}\n      className={classes.select}\n      {...restProps}\n    >\n      {mappedOptions}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { SuperButton } from \"../common/SuperButton/SuperButton\";\nimport { SuperCheckbox } from \"../common/SuperCheckbox/SuperCheckbox\";\nimport { SuperEditableSpan } from \"../common/SuperEditableSpan/SuperEditableSpan\";\nimport { SuperInputText } from \"../common/SuperInputText/SuperInputText\";\nimport { SuperRadio } from \"../common/SuperRadio/SuperRadio\";\nimport { SuperRange } from \"../common/SuperRange/SuperRange\";\nimport { SuperSelect } from \"../common/SuperSelect/SuperSelect\";\n\nexport const SuperComponents = () => {\n  return (\n    <div>\n      <div>SuperComponents</div>\n      <div>\n        <SuperInputText />\n        <span style={{ fontWeight: \"bold\" }}>InputText</span>\n      </div>\n      <div>\n        <SuperButton> x </SuperButton>\n        <span style={{ fontWeight: \"bold\" }}>Button</span>\n      </div>\n      <div>\n        <SuperCheckbox />\n        <span style={{ fontWeight: \"bold\" }}>Checkbox</span>\n      </div>\n      <div>\n        <SuperEditableSpan value={\"Enter your text here...\"} />\n        <span style={{ fontWeight: \"bold\" }}>EditableSpan</span>\n      </div>\n      <div>\n        <SuperSelect options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\n        <span style={{ fontWeight: \"bold\" }}>Select</span>\n      </div>\n      <div>\n        <SuperRadio name={\"radio\"} options={[\"x\", \"y\", \"z\"]} value={\"y\"} />\n        <span style={{ fontWeight: \"bold\", marginLeft: \"10px\" }}>Radio</span>\n      </div>\n      <div>\n        <SuperRange value={50} />\n        <span style={{ fontWeight: \"bold\" }}>Range</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const LogIn = () => {\n  return <div>Log in</div>;\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Header.module.css\";\nimport { Path } from \"../Routes/Routes\";\n\nexport const Header = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to={Path.LogIn} activeClassName={classes.active}>\n          Log in\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={Path.Registration} activeClassName={classes.active}>\n          Registration\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={Path.Profile} activeClassName={classes.active}>\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={Path.ResetPassword} activeClassName={classes.active}>\n          Reset password\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={Path.CreateNewPassword} activeClassName={classes.active}>\n          Create new password\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={Path.SuperComponents} activeClassName={classes.active}>\n          SuperComponents\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const logInReducer = (state = initState, action: any): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const registrationReducer = (\n  state = initState,\n  action: any\n): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const profileReducer = (\n  state = initState,\n  action: any\n): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const resetPasswordReducer = (\n  state = initState,\n  action: any\n): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const createNewPasswordReducer = (\n  state = initState,\n  action: any\n): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","type InitStateType = typeof initState;\n\nconst initState = {};\n\nexport const error404Reducer = (\n  state = initState,\n  action: any\n): InitStateType => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { logInReducer } from \"./logInReducer\";\nimport { registrationReducer } from \"./registrationReducer\";\nimport { profileReducer } from \"./profileReducer\";\nimport { resetPasswordReducer } from \"./resetPasswordReducer\";\nimport { createNewPasswordReducer } from \"./createNewPasswordReducer\";\nimport { error404Reducer } from \"./error404Reducer\";\n\nexport type RootStateType = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  logIn: logInReducer,\n  registration: registrationReducer,\n  profile: profileReducer,\n  resetPassword: resetPasswordReducer,\n  createNewPassword: createNewPasswordReducer,\n  error404: error404Reducer,\n});\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Header } from \"./Header/Header\";\nimport { store } from \"../bll/store\";\nimport { Routes } from \"./Routes/Routes\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Provider store={store}>\n          <Header />\n          <Routes />\n        </Provider>\n      </HashRouter>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./main/ui/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1Dw9s\",\"moveInLeft\":\"Header_moveInLeft__tBQ_Q\",\"item\":\"Header_item__1IsRx\",\"active\":\"Header_active__DKizl\"};"],"sourceRoot":""}